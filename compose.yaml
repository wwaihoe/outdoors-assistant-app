networks:
  bridgenetwork:
    driver: bridge

services:
  outdoors-assistant: #front-end
    build:
      context: ./outdoors-assistant
    ports:
      - 3000:3000
    environment:
      NODE_ENV: production
    networks:
      - bridgenetwork
    depends_on:
      - reviews-database

  events-database:
    build:
      context: ./events-database
    ports:
      - 3002:3002
    networks:
      - bridgenetwork
    depends_on:
      postgresdb:
        condition: service_healthy

  reviews-database:
    build:
      context: ./reviews-database
    ports:
      - 3003:3003
    networks:
      - bridgenetwork
    depends_on:
      postgresdb:
        condition: service_healthy

  postgresdb:
    image: postgres:latest
    restart: always
    environment:
      PGUSER: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: postgresdb
      POSTGRES_DB: outdoors-assistant
      PGDATA: /data/postgres
    ports:
      - 5432:5432
    networks:
      - bridgenetwork
    volumes:
      - db:/data/postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5
  
volumes:
  db: